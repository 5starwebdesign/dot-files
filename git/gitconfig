[core]
  pager = bash -lc 'git-diff-cleanup-output | less -FXr' -
  quotepath = false
  whitespace = space-before-tab,trailing-space,cr-at-eol
  excludesfile = gitignore
  editor = vim
[color]
  ui = auto
[color "branch"]
  current = green bold
  local = black
  remote = yellow
[color "diff"]
  meta = white bold
[alias]
  alias = "!git config --get-regexp 'alias.*' | sed -e \"s|^alias\\.||\""
  branchlog = "!git log --not HEAD"
  cb = "!(/usr/bin/env echo -n \"$(git rev-parse --abbrev-ref HEAD)\" | pbcopy; echo `tput setaf 5`'Branch name copied to clipboard'`tput sgr0`)"
  co = checkout
  child = "!sh -c 'git push origin $(git rev-parse --abbrev-ref HEAD); git checkout --track -b $1 origin/$(git rev-parse --abbrev-ref HEAD);' - "
  ci = commit
  cia = commit --amend
  changes = diff --name-status -r
  cm = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/compare/master...$(git rev-parse --abbrev-ref HEAD)#files_bucket\""
  diffc = diff --cached
  diffm = "!f() { git diff $@ | mate; }; f "
  gh = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/tree/$(git rev-parse --abbrev-ref HEAD)\""
  last = log -1 HEAD
  lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset' --date=relative
  llg = "!git log --pretty=format:'%Cred%h%Creset - %Cblue%an%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' $* | sed -Ee 's/(^[^<]*), [[:digit:]]+ .*months?\\)/\\1)/' | less -FXRS"
  pb = "!git push origin \"$(git rev-parse --abbrev-ref HEAD)\""
  pick = cherry-pick
  pul = pull
  pr = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pull/new/$(git rev-parse --abbrev-ref HEAD)\""
  prc = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pull/new/$(git rev-parse --abbrev-ref HEAD@{upstream} | sed 's/origin\\///')...$(git rev-parse --abbrev-ref HEAD)\""
  subup = "!(git submodule sync; git submodule update --init --recursive;)"
  st = status
  tagd = "!git log --tags --simplify-by-decoration --pretty=\"format:%ai %d\""
  unstage = reset HEAD --
  undo = reset --soft HEAD@{1}
  up = "!git pull origin \"$(git rev-parse --abbrev-ref HEAD)\""
[push]
  default = simple
[diff]
  algorithm = patience
  renames = copies
[web]
  browser = chromium
[branch]
  autosetupmerge = always
[rerere]
  enabled = true
[merge]
  stat = true
[pager]
  color = true
